.data
    emptyErrorMessage:	.asciiz "Input is empty."
    lengthErrorMessage: .asciiz "Input is too long."
    baseErrorMessage:   .asciiz "Invalid base-34 number."
    userInput:		.space 60
.text

    main:

	li $v0, 8   
	la $a0, userInput
	li $a1, 60
	syscall
	add $t0, $0, 0
	add $t1, $0, 0
	
	la $s2, userInput
	lb $t0,0($t2)
	beq $t0, 10, emptyError
	beq $t1,$0, emptyError

	addi $s0, $0, 32 
	addi $t3, $0, 1
	addi $t4, $0, 0
        addi $t5, $0, 0

        ignoreSpaces:
        lb $t0, 0($t2) 
	addi $t2, $t2, 1 
	addi $t1, $t1, 1
	beq $t0, 32, ignoreSpaces 
	beq $t0, 10, emptyError 
	beq $t0, $0, emptyError 
	
	viewchar:
        lb $t0, 0($t2)
        addi $t2, $t2, 1
        addi $t1, $t1, 1
        beq $t0, 10, restart
        beq $t0, 0, restart
        bne $t0, 32, viewchar

        viewRemaining:
        lb $t0, 0($t2)
        addi $t2, $t2, 1
        addi $t1, $t1, 1
        beq $t0, 10, restart
        beq $t0, 0, restart
	bne $t0, 32, baseError 
	 j viewRemaining

         restart:
         sub $t2, $t2, $t1 #restart the pointer
         la $t1, 0 #restart the counter

         continue:
         lb $t0, 0($t2)
         addi $t2, $t2, 1
         beq $t0, 32, continue
         addi $t2, $t2, -1

          stringLength:
          lb $t0, ($t2)
          addi $t2, $t2, 1
          addi $t1, $t1, 1
          beq $t0, 10, callconversions
          beq $t0, 0, callconversions
          beq $t0, 32, callconversions
          beq $t1, 5, lengthError
          j stringLength

